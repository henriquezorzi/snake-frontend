{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/joaos/snake-frontend/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useJogador } from \"../context/jogadorContext\";\n\nexport default function LoginPage() {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n  const { setJogador } = useJogador();\n\n  const handleLogin = async () => {\n    // validações (mantive as suas)\n    const trimmedName = name.trim();\n    if (!trimmedName) {\n      setErrorMessage(\"Por favor, preencha o nome\");\n      return;\n    }\n    if (trimmedName.length < 3) {\n      setErrorMessage(\"Nome deve ter pelo menos 3 caracteres\");\n      return;\n    }\n\n    const trimmedPassword = password.trim();\n    if (!trimmedPassword) {\n      setErrorMessage(\"Por favor, preencha a senha\");\n      return;\n    }\n    if (trimmedPassword.length < 4 || trimmedPassword.length > 20) {\n      setErrorMessage(\"Senha deve ter entre 4 e 20 caracteres\");\n      return;\n    }\n\n    const hasLetter = /[a-zA-Z]/.test(trimmedPassword);\n    const hasNumber = /[0-9]/.test(trimmedPassword);\n    if (!hasLetter || !hasNumber) {\n      setErrorMessage(\"Senha deve conter pelo menos uma letra e um número\");\n      return;\n    }\n\n    setErrorMessage(\"\");\n    setLoading(true);\n\n    try {\n      // checa existência\n      const checkRes = await fetch(\"http://localhost:4000/jogadores\");\n      if (checkRes.ok) {\n        const existingPlayers = await checkRes.json();\n        const nameExists = existingPlayers.some(\n          (player: any) => player.name?.toLowerCase() === trimmedName.toLowerCase()\n        );\n        if (nameExists) {\n          setErrorMessage(`O nome \"${trimmedName}\" já está sendo usado. Escolha outro.`);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // cria jogador\n      const res = await fetch(\"http://localhost:4000/jogadores\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: trimmedName, password: trimmedPassword }),\n      });\n\n      const data = await res.json();\n\n      if (res.ok) {\n        setJogador(data.jogador);\n        localStorage.setItem(\"nomeJogador\", data.jogador.name);\n        localStorage.setItem(\"jogadorId\", data.jogador._id);\n        router.push(\"/jogo\");\n      } else {\n        if (res.status === 409 || (data.error?.includes(\"já existe\") || data.error?.includes(\"duplicado\"))) {\n          setErrorMessage(`O nome \"${trimmedName}\" já está sendo usado. Tente outro.`);\n        } else {\n          setErrorMessage(data.error || \"Erro no cadastro/login\");\n        }\n      }\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"Erro ao conectar com o servidor\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col items-center justify-center bg-black text-yellow-400 font-mono\">\n      <h1 className=\"text-3xl mb-6\">Bem-vindo jogador</h1>\n\n      {errorMessage && (\n        <div className=\"mb-4 p-3 bg-red-900/50 border border-red-500 rounded text-red-300 text-center max-w-md\">\n          {errorMessage}\n        </div>\n      )}\n\n      {/* HONEYPOTs: campos que enganam o autofill, posicionados fora da tela */}\n      <div style={{ position: \"absolute\", left: -9999, top: 0, height: 0, width: 0, overflow: \"hidden\" }} aria-hidden>\n        <input name=\"no_autofill_user\" type=\"text\" autoComplete=\"username\" tabIndex={-1} />\n        <input name=\"no_autofill_pass\" type=\"password\" autoComplete=\"new-password\" tabIndex={-1} />\n      </div>\n\n      {/* Form real com autocomplete desligado */}\n      <form\n        onSubmit={(e) => { e.preventDefault(); handleLogin(); }}\n        autoComplete=\"off\"\n        className=\"flex flex-col items-center\"\n      >\n        <input\n          // nome sem palavras comuns como \"username\" ou \"password\"\n          name=\"jogo_nome\"\n          autoComplete=\"off\"\n          className=\"mb-4 px-4 py-2 rounded bg-gray-800 text-white\"\n          placeholder=\"Nome\"\n          value={name}\n          onChange={(e) => { setName(e.target.value); setErrorMessage(\"\"); }}\n        />\n\n        <input\n          // rotina: readOnly até o usuário focar — ajuda a prevenir autofill e prompt de salvar\n          name=\"jogo_senha\"\n          autoComplete=\"new-password\"\n          className=\"mb-4 px-4 py-2 rounded bg-gray-800 text-white\"\n          placeholder=\"Senha\"\n          value={password}\n          onChange={(e) => { setPassword(e.target.value); setErrorMessage(\"\"); }}\n          onKeyDown={(e) => { if (e.key === \"Enter\") handleLogin(); }}\n          // starta readOnly para evitar autofill; ao focar removemos o readOnly\n          readOnly\n          onFocus={(e) => {\n            // remove readOnly quando o usuário focar (funciona bem em React)\n            (e.target as HTMLInputElement).removeAttribute(\"readOnly\");\n          }}\n        />\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className={`border px-6 py-2 rounded hover:bg-green-600 ${loading ? \"opacity-60 cursor-not-allowed\" : \"\"}`}\n        >\n          {loading ? \"Carregando...\" : \"Entrar\"}\n        </button>\n      </form>\n\n      <div className=\"mt-6 text-sm text-gray-400 text-center max-w-md\">\n        <p className=\"mb-2\">Regras de cadastro:</p>\n        <p>• Nome: mínimo 3 caracteres (único no ranking)</p>\n        <p>• Senha: 4 a 20 caracteres, com pelo menos uma letra e um número</p>\n        <p className=\"mt-2 text-xs text-yellow-400\">\n          ⚠️ Cada jogador deve ter um nome único\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/joaos/snake-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}